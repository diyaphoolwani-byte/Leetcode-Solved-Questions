class Solution {
    public int[] sortArray(int[] nums) {
        int l=0;
        int r=nums.length-1;
        sort(nums,l,r);

        return nums;
    }
    public void sort(int nums[],int l,int r)
    {
        if(l<r)
        {
           int m=l+(r-l)/2;
           sort(nums,l,m);
           sort(nums,m+1,r);
           merge(nums,l,m,r);

        }
    }

    public void merge(int nums[],int l,int m,int r)
    {
        int L[]=new int[m-l+1];
        int R[]=new int[r-m];
        int n1=m-l+1;
        int n2=r-m;
        for(int i=0;i<n1;i++)
        {
            L[i]=nums[l+i];
        }

        for(int i=0;i<n2;i++)
        {
            R[i]=nums[m+1+i];
        }

        int i=0,j=0;
        int k=l;

        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) {
                nums[k] = L[i];
                i++;
            }
            else {
                nums[k] = R[j];
                j++;
            }
            k++;
        }
 
        // Copy remaining elements of L[] if any
        while (i < n1) {
            nums[k] = L[i];
            i++;
            k++;
        }
 
        // Copy remaining elements of R[] if any
        while (j < n2) {
            nums[k] = R[j];
            j++;
            k++;
        }
    }
}

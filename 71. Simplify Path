class Solution {
    public String simplifyPath(String path) {
       Stack<String> s=new Stack<String>();
       StringBuilder res=new StringBuilder("");
       res.append("/");

       for(int i=0;i<path.length();i++)
       {
           String dir="";
           while(i<path.length() && path.charAt(i)=='/')
           {
               i++;
           }

           while(i<path.length() && path.charAt(i)!='/')
           {
               dir+=path.charAt(i);
               i++;
           }

           if(dir.equals("..")==true)
           {
               if(!s.isEmpty())
               {
                   s.pop();
               }
           }else if(dir.equals(".")==true)
           {
               continue;

           }else if(dir.length()!=0)
           {
              s.push(dir);

           }

       }  
    
       Stack<String> s1=new Stack<String>();
       while(!s.isEmpty())
       {
           s1.push(s.peek());
           s.pop();
       } 

       while(!s1.isEmpty())
       {

           if(s1.size()!=1)
           {
               res.append(s1.peek());
               res.append("/");
           }
           else{
               
               res.append(s1.peek());
           }
           s1.pop();
       }

       return res.toString();
    }
}

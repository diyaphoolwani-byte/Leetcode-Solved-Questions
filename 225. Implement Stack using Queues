class MyStack {
    static Queue<Integer> q1;
    static Queue<Integer> q2;
    public MyStack() {
        q1=new LinkedList<>();
        q2=new LinkedList<>();
    }
    
    public void push(int x) {
        while(!q1.isEmpty())
        {
            q2.add(q1.remove());
        }
        q1.add(x);
        while(!q2.isEmpty())
        {
            q1.add(q2.remove());
        }
    }
    
    public int pop() {
        if(q1.isEmpty())
        {
            return -1;
        }

        return q1.remove();
    }
    
    public int top() {
        if(q1.isEmpty())
        {
            return -1;
        }
        return q1.peek();
    }
    
    public boolean empty() {
        return (q1.isEmpty() && q2.isEmpty());
    }
}

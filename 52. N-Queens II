class Solution {
    private int count=0;
    public int totalNQueens(int n) {
        char board[][]=new char[n][n];
        int row=0;
        for(int i=0;i<board.length;i++)
        {
            for(int j=0;j<board.length;j++)
            {
                board[i][j]='.';
            }
        }
        queens(board,row); 
        return count;
    }
    private void queens(char board[][],int row)
    {
        if(row==board.length)
        {
            count++;
            return ;
        }
        for(int j=0;j<board.length;j++)
        {
            if(isSafe(board,row,j))
            {
                board[row][j]='Q';
                queens(board,row+1);
                board[row][j]='.';
            }
        } 
    }
    public static boolean isSafe(char board[][],int row,int col)
    {
        // System.out.println(count);
        //vertically up
        for(int i=row-1;i>=0;i--)
        {
            if(board[i][col]=='Q')
            {
                return false;
            }
        }
 
        // diagonally left
        for(int i=row-1,j=col-1;i>=0 && j>=0;i--,j--)
        {
            if(board[i][j]=='Q')
            {
                return false;
            }
        }

        // diagonally right
        for(int i=row-1,j=col+1;i>=0 && j<board.length;i--,j++)
        {
            if(board[i][j]=='Q')
            {
                return false;
            }
        }

        return true;
    }
}
